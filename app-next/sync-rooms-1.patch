diff --git a/app-next/app/room/[id]/page.jsx b/app-next/app/room/[id]/page.jsx
index faadc97..ea9df6a 100644
--- a/app-next/app/room/[id]/page.jsx
+++ b/app-next/app/room/[id]/page.jsx
@@ -4,26 +4,30 @@ import Navbar from "@/components/navbar";
 import Footer from "@/components/footer";
 import Chat from "@/components/Chat";
 import CopyRoomUrlButton from "@/components/CopyRoomUrlButton";
+import { Video } from "@/components/Video";
 
 export async function generateMetadata({ params }) {
-  const room = await getRoom(params.id);
+  const roomId = (await params).id;
+  const room = await getRoom(roomId);
+
   if (!room) return { title: "Room Not Found" };
 
   return {
-    title: `Room ${params.id}`,
+    title: `Room ${roomId}`,
   };
 }
 
 export default async function RoomPage({ params }) {
-  const room = await getRoom(params.id);
+  const roomId = (await params).id;
+  const room = await getRoom(roomId);
+
   if (!room) {
     notFound();
   }
 
-  const messages = await getMessages(params.id);
+  const messages = await getMessages(roomId);
 
   return (
-    
     <div className="flex flex-col min-h-screen bg-gray-800">
          <div className="container mx-auto px-4 flex-grow">
             <Navbar />
@@ -33,21 +37,13 @@ export default async function RoomPage({ params }) {
           </h1>
           <div className="grid grid-cols-1 lg:grid-cols-5 gap-4">
             <div className="col-span-3 aspect-w-16 aspect-h-9">
-              {room.video_url && (
-                <iframe
-                  src={`https://www.youtube.com/embed/${extractVideoId(
-                    room.video_url
-                  )}`}
-                  frameBorder="0"
-                  allow="autoplay; encrypted-media"
-                  allowFullScreen
-                  className="w-full h-full rounded-lg shadow-lg"
-                ></iframe>
-              )}
+              <div className="w-full h-full rounded-lg shadow-lg">
+                <Video id={room.id} url={room.video_url} />
+              </div>
             </div>
             <div className="col-span-2 bg-gray-900 text-gray-300 rounded-lg shadow-lg p-4 h-full flex flex-col">
-              <Chat initialMessages={messages} roomId={params.id} />
-              <CopyRoomUrlButton roomId={params.id} />
+              <Chat initialMessages={messages} roomId={roomId} />
+              <CopyRoomUrlButton roomId={roomId} />
             </div>
           </div>
         </main>
@@ -57,9 +53,3 @@ export default async function RoomPage({ params }) {
   );
 }
 
-const extractVideoId = (url) => {
-  const match = url.match(
-    /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/
-  );
-  return match ? match[1] : null;
-};
diff --git a/app-next/app/room/page.jsx b/app-next/app/room/page.jsx
index f6a8e3c..98a4f02 100644
--- a/app-next/app/room/page.jsx
+++ b/app-next/app/room/page.jsx
@@ -8,7 +8,6 @@ import { Youtube, Users, MessageCircle } from "lucide-react";
 
 export default function CreateRoomPage() {
   const [videoUrl, setVideoUrl] = useState("");
-  const [roomId, setRoomId] = useState(null);
 
   const handleCreateRoom = async () => {
     if (!videoUrl) {
@@ -19,7 +18,6 @@ export default function CreateRoomPage() {
     try {
       const room = await createRoom(videoUrl);
       if (room && room.id) {
-        setRoomId(room.id);
         window.location.href = `/room/${room.id}`;
       }
     } catch (error) {
diff --git a/app-next/components/Video.jsx b/app-next/components/Video.jsx
new file mode 100644
index 0000000..10016dc
--- /dev/null
+++ b/app-next/components/Video.jsx
@@ -0,0 +1,7 @@
+'use client';
+
+import ReactPlayer from 'react-player';
+
+export function Video ({ id, url }) {
+  return <ReactPlayer url={url} width={"100%"} height={"100%"}/>;
+}
\ No newline at end of file
diff --git a/app-next/package-lock.json b/app-next/package-lock.json
index 1ead237..35fb343 100644
--- a/app-next/package-lock.json
+++ b/app-next/package-lock.json
@@ -63,6 +63,7 @@
         "react-dom": "^18.3.1",
         "react-hook-form": "^7.53.0",
         "react-icons": "^5.4.0",
+        "react-player": "^2.16.0",
         "react-resizable-panels": "^2.1.3",
         "react-toastify": "^11.0.3",
         "recharts": "^2.12.7",
@@ -3449,6 +3450,15 @@
       "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
       "license": "MIT"
     },
+    "node_modules/deepmerge": {
+      "version": "4.3.1",
+      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
+      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/define-data-property": {
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
@@ -5675,6 +5685,12 @@
       "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
       "license": "MIT"
     },
+    "node_modules/load-script": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/load-script/-/load-script-1.0.0.tgz",
+      "integrity": "sha512-kPEjMFtZvwL9TaZo0uZ2ml+Ye9HUMmPwbYRJ324qF9tqMejwykJ5ggTyvzmrbBeapCAbk98BSbTeovHEEP1uCA==",
+      "license": "MIT"
+    },
     "node_modules/loader-runner": {
       "version": "4.3.0",
       "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.3.0.tgz",
@@ -5747,6 +5763,12 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/memoize-one": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.2.1.tgz",
+      "integrity": "sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==",
+      "license": "MIT"
+    },
     "node_modules/merge-stream": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
@@ -6718,6 +6740,12 @@
         "react": "^18.3.1"
       }
     },
+    "node_modules/react-fast-compare": {
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-3.2.2.tgz",
+      "integrity": "sha512-nsO+KSNgo1SbJqJEYRE9ERzo7YtYbou/OqjSQKxV7jcKox7+usiUVZOAC+XnDOABXggQTno0Y1CpVnuWEc1boQ==",
+      "license": "MIT"
+    },
     "node_modules/react-hook-form": {
       "version": "7.54.2",
       "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.54.2.tgz",
@@ -6749,6 +6777,22 @@
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
       "license": "MIT"
     },
+    "node_modules/react-player": {
+      "version": "2.16.0",
+      "resolved": "https://registry.npmjs.org/react-player/-/react-player-2.16.0.tgz",
+      "integrity": "sha512-mAIPHfioD7yxO0GNYVFD1303QFtI3lyyQZLY229UEAp/a10cSW+hPcakg0Keq8uWJxT2OiT/4Gt+Lc9bD6bJmQ==",
+      "license": "MIT",
+      "dependencies": {
+        "deepmerge": "^4.0.0",
+        "load-script": "^1.0.0",
+        "memoize-one": "^5.1.1",
+        "prop-types": "^15.7.2",
+        "react-fast-compare": "^3.0.1"
+      },
+      "peerDependencies": {
+        "react": ">=16.6.0"
+      }
+    },
     "node_modules/react-remove-scroll": {
       "version": "2.6.3",
       "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.6.3.tgz",
diff --git a/app-next/package.json b/app-next/package.json
index b1f5431..01537b7 100644
--- a/app-next/package.json
+++ b/app-next/package.json
@@ -64,6 +64,7 @@
     "react-dom": "^18.3.1",
     "react-hook-form": "^7.53.0",
     "react-icons": "^5.4.0",
+    "react-player": "^2.16.0",
     "react-resizable-panels": "^2.1.3",
     "react-toastify": "^11.0.3",
     "recharts": "^2.12.7",
